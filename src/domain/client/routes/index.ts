import { Method } from 'axios';

const routeIds = {
  transaction: {
    create: 'create-transaction' as 'create-transaction',
    capture: 'capture-transaction' as 'capture-transaction',
    refund: 'refund-transaction' as 'refund-transaction',
    getList: 'list-transactions' as 'list-transactions',
    getDetail: 'transaction-detail' as 'transaction-detail',
    getPayables: 'transaction-payables' as 'transaction-payables',
    getPayable: 'transaction-payable' as 'transaction-payable',
    getOperations: 'transaction-operations' as 'transaction-operations',
    getEvents: 'transaction-events' as 'transaction-events',
    getCardHashKey: 'transaction-card-hash-key' as 'transaction-card-hash-key',
    collectPayment: 'collect-payment' as 'collect-payment',
    calculateInstallments: 'calculate-installments' as 'calculate-installments',
    update: 'update-transaction' as 'update-transaction',
    generateKeyForHash: 'card-key-for-hash' as 'key-for-hash',
  },
  refund: {
    getList: 'refund-list' as 'refund-list',
    cancel: 'cancel-refund' as 'cancel-refund',
  },
  card: {
    create: 'card-create' as 'card-create',
    getList: 'card-list' as 'card-list',
    getDetail: 'card-detail' as 'card-detail',
  },
  plans: {
    create: 'plan-create' as 'plan-create',
    update: 'plan-update' as 'plan-update',
    getList: 'plan-list' as 'plan-list',
    getDetail: 'plan-detail' as 'plan-detail',
  },
  subscriptions: {
    create: 'subscription-create' as 'subscription-create',
    update: 'subscription-update' as 'subscription-update',
    cancel: 'subscription-cancel' as 'subscription-cancel',
    getDetail: 'subscription-detail' as 'subscription-detail',
    getList: 'subscription-list' as 'subscription-list',
    getTransactions: 'subscription-transactions' as 'subscription-transactions',
    skipCharge: 'subscription-skip-charge' as 'subscription-skip-charge',
  },
  postback: {
    redeliver: 'postback-redeliver' as 'postback-redeliver',
    getList: 'postback-list' as 'postback-list',
    getDetail: 'postback-detail' as 'postback-detail',
  },
  balance: {
    get: 'balance' as 'balance',
    getOperations: 'balance-operations' as 'balance-operations',
    getOperationDetail: 'balance-operation-detail' as 'balance-operation-detail',
  },
  payables: {
    getList: 'payables-list' as 'payables-list',
    getDetail: 'payable-detail' as 'payable-detail',

  },
  transfers: {
    create: 'transfer-create' as 'transfer-create',
    cancel: 'transfer-cancel' as 'transfer-cancel',
    getList: 'transfers-list' as 'transfers-list',
    getDetail: 'transfer-detail' as 'transfer-detail',
  },
  bulkAnticipations: {
    create: 'bulk-anticipations-create' as 'bulk-anticipations-create',
    confirm: 'bulk-anticipations-confirm' as 'bulk-anticipations-confirm',
    cancel: 'bulk-anticipations-cancel' as 'bulk-anticipations-cancel',
    delete: 'bulk-anticipations-delete' as 'bulk-anticipations-delete',
    getLimits: 'bulk-anticipations-limits' as 'bulk-anticipations-limits',
    getList: 'bulk-anticipations-list' as 'bulk-anticipations-list',
  },
  bankAccounts: {
    create: 'bank-account-create' as 'bank-account-create',
    getList: 'bank-account-list' as 'bank-account-list',
    getDetail: 'bank-account-detail' as 'bank-account-detail',
  },
  recipients: {
    create: 'recipient-create' as 'recipient-create',
    update: 'recipient-update' as 'recipient-update',
    getList: 'recipient-list' as 'recipient-list',
    getDetail: 'recipient-detail' as 'recipient-detail',
    getBalance: 'recipient-balance' as 'recipient-balance',
    getBalanceOperations: 'recipient-balance-operations' as 'recipient-balance-operations',
    getBalanceOperationDetail: 'recipient-balance-operation-detail' as 'recipient-balance-operation-detail',
  },
  customer: {
    create: 'customer-create' as 'customer-create',
    update: 'customer-update' as 'customer-update',
    getList: 'customer-list' as 'customer-list',
    getDetail: 'customer-detail' as 'customer-detail',
  },
  antifraudAnalyses: {
    getList: 'antifraud-analyses-list' as 'antifraud-analyses-list',
    getDetail: 'antifraud-analyses-detail' as 'antifraud-analyses-detail',
  },
  zipcode: {
    getDetail: 'zipcode-detail' as 'zipcode-detail',
  },
  splitRules: {
    getList: 'split-rules-list' as 'split-rules-list',
    getDetail: 'split-rules-detail' as 'split-rules-detail',
  },
  chargebacks: {
    getList: 'chargeback-list' as 'chargeback-list',
  },
  paymentLinks: {
    create: 'payment-link-create' as 'payment-link-create',
    cancel: 'payment-link-cancel' as 'payment-link-cancel',
    getList: 'payment-link-list' as 'payment-link-list',
    getDetail: 'payment-link-detail' as 'payment-link-detail',
    order: 'payment-link-order' as 'payment-link-order',
  },
  securityRules: {
    create: 'security-rule-create' as 'security-rule-create',
    delete: 'security-rule-delete' as 'security-rule-delete',
    getList: 'security-rule-list' as 'security-rule-list',
  },
  company: {
    get: 'company-get' as 'company-get',
  },
};

const routeDefinitions = {
  [routeIds.transaction.create]() { return { method: 'POST', url: '/transactions' }; },
  [routeIds.transaction.capture](transactionId) { return { method: 'POST', url: `/transactions/${transactionId}/capture` }; },
  [routeIds.transaction.refund](transactionId) { return { method: 'POST', url: `/transactions/${transactionId}/refund` }; },
  [routeIds.transaction.collectPayment](transactionId) { return { method: 'POST', url: `/transactions/${transactionId}/collect_payment` }; },
  [routeIds.transaction.update](transactionId) { return { method: 'PUT', url: `/transactions/${transactionId}` }; },
  [routeIds.transaction.getList]() { return { method: 'GET', url: '/transactions' }; },
  [routeIds.transaction.getDetail](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}` }; },
  [routeIds.transaction.getPayables](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}/payables` }; },
  [routeIds.transaction.getPayable](transactionId, payableId) { return { method: 'GET', url: `/transactions/${transactionId}/payables/${payableId}` }; },
  [routeIds.transaction.getOperations](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}/operations` }; },
  [routeIds.transaction.getEvents](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}/events` }; },
  [routeIds.transaction.calculateInstallments]() { return { method: 'GET', url: '/transactions/calculate_installments_amount' }; },
  [routeIds.transaction.getCardHashKey]() { return { method: 'GET', url: '/transactions/card_hash_key' }; },
  [routeIds.transaction.generateKeyForHash]() { return { method: 'GET', url: '/transactions/card_hash_key' }; },
  [routeIds.refund.getList]() { return { method: 'GET', url: '/refunds' }; },
  [routeIds.refund.cancel](refundId) { return { method: 'POST', url: `/refunds/${refundId}/cancel` }; },
  [routeIds.card.create]() { return { method: 'POST', url: '/cards' }; },
  [routeIds.card.getList]() { return { method: 'GET', url: '/cards' }; },
  [routeIds.card.getDetail](cardId) { return { method: 'GET', url: `/cards/${cardId}` }; },
  [routeIds.plans.create]() { return { method: 'POST', url: '/plans' }; },
  [routeIds.plans.update](planId) { return { method: 'PUT', url: `/plans/${planId}` }; },
  [routeIds.plans.getList]() { return { method: 'GET', url: '/plans' }; },
  [routeIds.plans.getDetail](planId) { return { method: 'GET', url: `/plans/${planId}` }; },
  [routeIds.subscriptions.create]() { return { method: 'POST', url: '/subscriptions' }; },
  [routeIds.subscriptions.update](subscriptionId) { return { method: 'PUT', url: `/subscriptions/${subscriptionId}` }; },
  [routeIds.subscriptions.cancel](subscriptionId) { return { method: 'POST', url: `/subscriptions/${subscriptionId}/cancel` }; },
  [routeIds.subscriptions.getDetail](subscriptionId) { return { method: 'GET', url: `/subscriptions/${subscriptionId}` }; },
  [routeIds.subscriptions.getList]() { return { method: 'GET', url: '/subscriptions' }; },
  [routeIds.subscriptions.getTransactions](subscriptionId) { return { method: 'GET', url: `/subscriptions/${subscriptionId}/transactions` }; },
  [routeIds.subscriptions.skipCharge](subscriptionId) { return { method: 'POST', url: `/subscriptions/${subscriptionId}/settle_charge` }; },
  [routeIds.postback.redeliver](model, modelId, postbackId) { return { method: 'POST', url: `/${model}/${modelId}/postbacks/${postbackId}/redeliver` }; },
  [routeIds.postback.getList](model, modelId) { return { method: 'GET', url: `/${model}/${modelId}/postbacks` }; },
  [routeIds.postback.getDetail](model, modelId, postbackId) { return { method: 'GET', url: `/${model}/${modelId}/postbacks/${postbackId}` }; },
  [routeIds.balance.get]() { return { method: 'GET', url: '/balance' }; },
  [routeIds.balance.getOperations]() { return { method: 'GET', url: '/balance/operations' }; },
  [routeIds.balance.getOperationDetail](balanceOperationId) { return { method: 'GET', url: `/balance/operations/${balanceOperationId}` }; },
  [routeIds.payables.getList]() { return { method: 'GET', url: '/payables' }; },
  [routeIds.payables.getDetail](payableId) { return { method: 'GET', url: `/payables/${payableId}` }; },
  [routeIds.transfers.create]() { return { method: 'POST', url: '/transfers' }; },
  [routeIds.transfers.cancel](transferId) { return { method: 'POST', url: `/transfers/${transferId}/cancel` }; },
  [routeIds.transfers.getList]() { return { method: 'GET', url: '/transfers' }; },
  [routeIds.transfers.getDetail](transferId) { return { method: 'GET', url: `/transfers/${transferId}` }; },
  [routeIds.bulkAnticipations.create](recipientId) { return { method: 'POST', url: `/recipients/${recipientId}/bulk_anticipations` }; },
  [routeIds.bulkAnticipations.confirm](recipientId, bulkAnticipationId) { return { method: 'POST', url: `/recipients/${recipientId}/bulk_anticipations/${bulkAnticipationId}/confirm` }; },
  [routeIds.bulkAnticipations.cancel](recipientId, bulkAnticipationId) { return { method: 'POST', url: `/recipients/${recipientId}/bulk_anticipations/${bulkAnticipationId}/cancel` }; },
  [routeIds.bulkAnticipations.delete](recipientId, bulkAnticipationId) { return { method: 'POST', url: `/recipients/${recipientId}/bulk_anticipations/${bulkAnticipationId}/delete` }; },
  [routeIds.bulkAnticipations.getLimits](recipientId) { return { method: 'GET', url: `/recipients/${recipientId}/bulk_anticipations/limits` }; },
  [routeIds.bulkAnticipations.getList](recipientId) { return { method: 'GET', url: `/recipients/${recipientId}/bulk_anticipations` }; },
  [routeIds.bankAccounts.create]() { return { method: 'POST', url: '/bank_accounts' }; },
  [routeIds.bankAccounts.getList]() { return { method: 'GET', url: '/bank_accounts' }; },
  [routeIds.bankAccounts.getDetail](bankAccountId) { return { method: 'GET', url: `/bank_accounts/${bankAccountId}` }; },
  [routeIds.recipients.create]() { return { method: 'POST', url: '/recipients' }; },
  [routeIds.recipients.update](recipientId) { return { method: 'PUT', url: `/recipients/${recipientId}` }; },
  [routeIds.recipients.getDetail](recipientId) { return { method: 'GET', url: `/recipients/${recipientId}` }; },
  [routeIds.recipients.getList]() { return { method: 'GET', url: '/recipients' }; },
  [routeIds.recipients.getBalance](recipientId) { return { method: 'GET', url: `/recipients/${recipientId}/balance` }; },
  [routeIds.recipients.getBalanceOperations](recipientId) { return { method: 'GET', url: `/recipients/${recipientId}/balance/operations` }; },
  [routeIds.recipients.getBalanceOperationDetail](recipientId, balanceOpertionId) { return { method: 'GET', url: `/recipients/${recipientId}/balance/operations/${balanceOpertionId}` }; },
  [routeIds.customer.create]() { return { method: 'POST', url: '/customers' }; },
  [routeIds.customer.update](customerId) { return { method: 'PUT', url: `/customers/${customerId}` }; },
  [routeIds.customer.getDetail](customerId) { return { method: 'GET', url: `/customers/${customerId}` }; },
  [routeIds.customer.getList]() { return { method: 'GET', url: '/customers' }; },
  [routeIds.antifraudAnalyses.getList](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}/antifraud_analyses` }; },
  [routeIds.antifraudAnalyses.getDetail](transactionId, antifraudAnalisysId) { return { method: 'GET', url: `/transactions/${transactionId}/antifraud_analyses/${antifraudAnalisysId}` }; },
  [routeIds.zipcode.getDetail](zipcode) { return { method: 'GET', url: `/zipcodes/${zipcode}` }; },
  [routeIds.splitRules.getDetail](transactionId, splitRuleId) { return { method: 'GET', url: `/transactions/${transactionId}/split_rules/${splitRuleId}` }; },
  [routeIds.splitRules.getList](transactionId) { return { method: 'GET', url: `/transactions/${transactionId}/split_rules` }; },
  [routeIds.chargebacks.getList]() { return { method: 'GET', url: '/chargebacks' }; },
  [routeIds.paymentLinks.create]() { return { method: 'POST', url: '/payment_links' }; },
  [routeIds.paymentLinks.cancel](paymentLinkId) { return { method: 'POST', url: `/payment_links/${paymentLinkId}/cancel` }; },
  [routeIds.paymentLinks.getList]() { return { method: 'GET', url: '/payment_links' }; },
  [routeIds.paymentLinks.getDetail](paymentLinkId) { return { method: 'GET', url: `/payment_links/${paymentLinkId}/cancel` }; },
  [routeIds.paymentLinks.order]() { return { method: 'GET', url: '/orders' }; },
  [routeIds.securityRules.create]() { return { method: 'POST', url: '/security_rules' }; },
  [routeIds.securityRules.delete](securityRuleId) { return { method: 'DELETE', url: `/security_rules/${securityRuleId}` }; },
  [routeIds.securityRules.getList]() { return { method: 'GET', url: '/security_rules' }; },
  [routeIds.company.get]() { return { method: 'GET', url: '/company' }; },

};
const resolve = (
  routeId: string, args: Array<any>, version: number = 1,
) => {
  const func = routeDefinitions[routeId];
  if (typeof func === 'function') {
    const { method, url } = func(...args);
    return { method: method as Method, url: `/${version}${url}` };
  }
  return { method: 'GET' as Method, url: '' };
};
export default { routeIds, resolve };
